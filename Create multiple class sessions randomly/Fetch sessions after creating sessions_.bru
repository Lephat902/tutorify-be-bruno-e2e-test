meta {
  name: Fetch sessions after creating sessions_
  type: graphql
  seq: 6
}

post {
  url: {{graphql_base_url}}
  body: graphql
  auth: inherit
}

body:graphql {
  query ExampleQuery($classId: String) {
    classSessions(classId: $classId) {
      results {
        id
      }
      totalCount
    }
  }
  
}

body:graphql:vars {
  {
    "classId": "{{class_id_to_create_session}}"
  }
}

script:post-response {
  const sessionTotalCount = bru.getVar('sessions_total_count');
  const numOfSessionsToCreate = bru.getVar('num_of_sessions_to_create');
  const sessionsCountToWait = sessionTotalCount + numOfSessionsToCreate;
  const sessions = res.body.data.classSessions.results;
  
  if (sessions.length < sessionsCountToWait) {
    bru.setNextRequest("Fetch sessions after creating sessions_");
    return;
  }
  
  const createdSessionsIds = sessions.map(session => session.id);
  
  bru.setVar('created_sessions_ids', createdSessionsIds);
}
