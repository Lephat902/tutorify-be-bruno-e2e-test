meta {
  name: Verify class application is created
  type: graphql
  seq: 3
}

post {
  url: {{graphql_base_url}}
  body: graphql
  auth: inherit
}

body:graphql {
  query ExampleQuery($classId: String) {
    classApplications(classId: $classId) {
      id
      status
      isDesignated
      tutorId
      classId
    }
  }
  
}

body:graphql:vars {
  {
    "classId": "{{created_class_id}}"
  }
}

assert {
  res.body.data.classApplications: length 1
  res.body.data.classApplications[0].status: eq PENDING
  res.body.data.classApplications[0].isDesignated: isTruthy
  res.body.data.classApplications[0].tutorId: eq {{sample_tutor_id}}
  res.body.data.classApplications[0].classId: eq {{created_class_id}}
}

script:post-response {
  if (res.body.data) {
    bru.setVar("1st_tutor_application_id", res.body.data.classApplications[0].id);
  } else {
    bru.setNextRequest("Verify class application is created");
  }
}
