meta {
  name: Get all feedbacks of a tutor with default paging
  type: graphql
  seq: 2
}

post {
  url: {{base_url}}/graphql
  body: graphql
  auth: none
}

body:graphql {
  query Query($tutorId: String) {
    feedbacks(tutorId: $tutorId) {
      results {
        id
        rate
        text
        createdAt
        updatedAt
        user {
          avatar {
            id
            url
            title
            size
          }
          username
          id
        }
      }
      totalCount
    }
  }
}

body:graphql:vars {
  {
    "tutorId": "{{sample_tutor_id}}"
  }
}

assert {
  res.status: eq 200
  res.responseTime: lte {{high_response_time}}
}

tests {
  
  test("should get a correct response", function (){
    const responseData = res.getBody();
    
    expect(responseData.data.feedbacks.results.length).to.be.most(10).and.to.be.most(responseData.data.feedbacks.totalCount);
  });
}
