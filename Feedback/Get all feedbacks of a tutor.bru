meta {
  name: Get all feedbacks of a tutor
  type: graphql
  seq: 1
}

post {
  url: {{base_url}}/graphql
  body: graphql
  auth: none
}

body:graphql {
  query Query($tutorId: String) {
    feedbacks(tutorId: $tutorId) {
      results {
        id
        rate
        text
        createdAt
        updatedAt
        user {
          avatar {
            id
            url
            title
            size
          }
          username
          id
        }
      }
      totalCount
    }
  }
}

body:graphql:vars {
  {
    "tutorId": "65df11725d9c3155d4530033"
  }
}

assert {
  res.status: eq 200
}

tests {
  const fs = require('node:fs');
  const path = require("path");
  const cwd = bru.cwd();
  
  test("should get full provinces", function (){
    const outputData = res.getBody();
  const expectedData = JSON.parse(fs.readFileSync(path.join(cwd, "test-data/feedbacks.json"),{ encoding: 'utf8', flag: 'r' }));
  
   expect(outputData).to.deep.equal(expectedData);
     
  });
}
