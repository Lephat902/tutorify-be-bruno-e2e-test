meta {
  name: Get all feedbacks of a tutor with paging
  type: graphql
  seq: 3
}

post {
  url: {{base_url}}/graphql
  body: graphql
  auth: none
}

body:graphql {
  query Query($tutorId: String, $page: Int, $limit: Int) {
    feedbacks(tutorId: $tutorId, page: $page, limit: $limit) {
      results {
        id
        rate
        text
        createdAt
        updatedAt
        user {
          avatar {
            id
            url
            title
            size
          }
          username
          id
        }
      }
      totalCount
    }
  }
}

body:graphql:vars {
  {
    "tutorId": "{{sample_tutor_id}}",
    "page": 1,
    "limit": 2
  }
}

tests {
  
  test("should get a correct response", function (){
    const responseData = res.getBody();
    
    expect(responseData.data.feedbacks.results.length).to.be.most(2).and.to.be.most(responseData.data.feedbacks.totalCount);
  });
}
