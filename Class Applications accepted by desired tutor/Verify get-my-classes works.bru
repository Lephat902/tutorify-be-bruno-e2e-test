meta {
  name: Verify get-my-classes works
  type: graphql
  seq: 9
}

post {
  url: {{graphql_base_url}}
  body: graphql
  auth: inherit
}

body:graphql {
  query ExampleQuery($me: Boolean, $order: ClassOrderBy, $page: Int, $limit: Int, $dir: String) {
    classes(me: $me, order: $order, page: $page, limit: $limit, dir: $dir) {
      results {
        id
        status
        tutorId
      }
    }
  }
  
}

body:graphql:vars {
  {
    "me": true,
    "order": "CREATE_DAY",
    "page": 1,
    "limit": 1,
    "dir": "DESC"
  }
}

script:post-response {
  const classes = res.body.data.classes.results;
  const onlyClass = classes[0];
  
  if (onlyClass?.status !== 'ASSIGNED') {
    bru.setNextRequest("Verify get-my-classes work");
  }
}

tests {
  const classes = res.body.data.classes.results;
  const onlyClass = classes[0];
  
  if (onlyClass?.status !== 'ASSIGNED') {
    return;
  }
  
  test(`Should return recently created class`, () => {
    expect(onlyClass.id).to.equal(bru.getVar('created_class_id'));
  });
  test(`Should return correct class status`, () => {
    expect(onlyClass.status).to.equal('ASSIGNED');
  });
  test(`Should return correct tutor for class`, () => {
    expect(onlyClass.tutorId).to.equal(bru.getEnvVar('sample_tutor_id'));
  });
  test(`Should return exact 1 item`, () => {
    expect(classes.length).to.equal(1);
  });
}
