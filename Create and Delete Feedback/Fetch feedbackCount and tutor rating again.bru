meta {
  name: Fetch feedbackCount and tutor rating again
  type: graphql
  seq: 9
}

post {
  url: {{graphql_base_url}}
  body: graphql
  auth: inherit
}

body:graphql {
  query ExampleQuery($tutorId: String!) {
    tutor(id: $tutorId) {
     	totalFeedbackRating
      feedbackCount
      id
    }
  }
}

body:graphql:vars {
  {
    "tutorId": "{{sample_tutor_id}}"
  }
}

script:post-response {
  if (res.body.data.tutor.feedbackCount - 1 !== bru.getVar('feedbackCount')) {
    bru.setNextRequest("Fetch feedbackCount and tutor rating again");
  }
}

tests {
  if (res.body.data.tutor.feedbackCount - 1 !== bru.getVar('feedbackCount')) {
    return;
  }
  
  test(`Should return corrrect status`, () => {
    expect(res.status).to.equal(200);
  });
  test(`Should be faster than LRT`, () => {
    expect(res.responseTime).to.be.below(Number(bru.getEnvVar('low_response_time')));
  });
  test(`Should return correct feedbackCount`, () => {
    expect(res.body.data.tutor.feedbackCount - 1).to.equal(bru.getVar('feedbackCount'));
  });
  test(`Should return correct totalFeedbackRating`, () => {
    expect(res.body.data.tutor.totalFeedbackRating - 4).to.equal(bru.getVar('totalFeedbackRating'));
  });
}
